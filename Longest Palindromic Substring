#include<iostream>
#include<bits/stdc++.h>
#include<stack>
#include<queue>
#include<algorithm>
#include<cmath>

using namespace std;
void printSubStr(string str,int low,int high)
{
  int i;
  for(i=low;i<=high;i++)
  {
    std::cout<<str[i];
  }
}
void longestPalindromeSubstring(string str)
{
  int n=str.length();
  bool dp[n][n];
  for(int i=0;i<n;i++)
  {
    dp[i][i]=1;
  }
  //Now I am going for length 2
  int start=0;
  int maxlen=0,j;
  for(int i=0;i<n-1;i++)
  {
    if(str[i]==str[i+1])
    {
      dp[i][i+1]=1;
      maxlen=2;
      start=i;
    }
    else
    {
      dp[i][j]=0;
    }
  }
  //Now I am going to find out length of substring of length 3...and ..more.
  for(int k=3;k<=n;k++)
  {
    for(int i=0;i<n-k+1;i++)
    {
      j=i+k-1;
      if((str[i]==str[j]) && dp[i+1][j-1]==1)
      {
        dp[i][j]=1;
        if(k>maxlen)
        {
          maxlen=k;
          start=i;
        }
      }
    }
  }
  printSubStr(str,start,start+maxlen-1);
  return;
}

int main()
{
  int test;
  std::cin>>test;
  while(test--)
  {
    string str;
    std::cin>>str;
    longestPalindromeSubstring(str);
    std::cout<<endl;
  }
  return 0;
}
